// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RangePicker component 
  
 1`] = `
<Calendar
  onRangeChange={[Function]}
  rangePicker={true}
/>
`;

exports[`RangePicker component 
  monthsInView: 1
 1`] = `
<Calendar
  monthsInView={1}
  onRangeChange={[Function]}
  rangePicker={true}
/>
`;

exports[`RangePicker component 
  monthsInView: 1
 2`] = `
<Calendar
  monthNav={11}
  monthsInView={1}
  onRangeChange={[Function]}
  rangePicker={true}
  yearNav={2019}
/>
`;

exports[`RangePicker component 
  monthsInView: 2
 1`] = `
<Calendar
  monthsInView={2}
  onRangeChange={[Function]}
  rangePicker={true}
/>
`;

exports[`RangePicker component 
  monthsInView: 2
 2`] = `
<Calendar
  monthNav={11}
  monthsInView={2}
  onRangeChange={[Function]}
  rangePicker={true}
  yearNav={2019}
/>
`;

exports[`RangePicker component 
  monthsInView: 3
 1`] = `
<Calendar
  monthsInView={3}
  onRangeChange={[Function]}
  rangePicker={true}
/>
`;

exports[`RangePicker component 
  monthsInView: 3
 2`] = `
<Calendar
  monthNav={11}
  monthsInView={3}
  onRangeChange={[Function]}
  rangePicker={true}
  yearNav={2019}
/>
`;

exports[`RangePicker component 
  open: false
 1`] = `
<Popover
  appendToBody={true}
  onToggle={[Function]}
  open={false}
  trigger={
    <div
      className="RangePicker-input"
    >
      <ForwardRef
        error={false}
        label="Start Date"
        mask={
          Array [
            /\\\\d/,
            /\\\\d/,
            "/",
            /\\\\d/,
            /\\\\d/,
            "/",
            /\\\\d/,
            /\\\\d/,
            /\\\\d/,
            /\\\\d/,
          ]
        }
        name="rangePicker-start"
        onBlur={[Function]}
        onChange={[Function]}
        onClear={[Function]}
        onClick={[Function]}
        placeholder="mm/dd/yyyy"
        placeholderChar="_"
        value=""
      />
      <div
        className="RangePicker-rangeSeparator"
      >
        <Text>
           - 
        </Text>
      </div>
      <ForwardRef
        error={false}
        label="End Date"
        mask={
          Array [
            /\\\\d/,
            /\\\\d/,
            "/",
            /\\\\d/,
            /\\\\d/,
            "/",
            /\\\\d/,
            /\\\\d/,
            /\\\\d/,
            /\\\\d/,
          ]
        }
        name="rangePicker-end"
        onBlur={[Function]}
        onChange={[Function]}
        onClear={[Function]}
        onClick={[Function]}
        placeholder="mm/dd/yyyy"
        placeholderChar="_"
        value=""
      />
    </div>
  }
>
  <Calendar
    onRangeChange={[Function]}
    rangePicker={true}
  />
</Popover>
`;

exports[`RangePicker component 
  open: true
 1`] = `
<Popover
  appendToBody={true}
  onToggle={[Function]}
  open={true}
  trigger={
    <div
      className="RangePicker-input"
    >
      <ForwardRef
        error={false}
        label="Start Date"
        mask={
          Array [
            /\\\\d/,
            /\\\\d/,
            "/",
            /\\\\d/,
            /\\\\d/,
            "/",
            /\\\\d/,
            /\\\\d/,
            /\\\\d/,
            /\\\\d/,
          ]
        }
        name="rangePicker-start"
        onBlur={[Function]}
        onChange={[Function]}
        onClear={[Function]}
        onClick={[Function]}
        placeholder="mm/dd/yyyy"
        placeholderChar="_"
        value=""
      />
      <div
        className="RangePicker-rangeSeparator"
      >
        <Text>
           - 
        </Text>
      </div>
      <ForwardRef
        error={false}
        label="End Date"
        mask={
          Array [
            /\\\\d/,
            /\\\\d/,
            "/",
            /\\\\d/,
            /\\\\d/,
            "/",
            /\\\\d/,
            /\\\\d/,
            /\\\\d/,
            /\\\\d/,
          ]
        }
        name="rangePicker-end"
        onBlur={[Function]}
        onChange={[Function]}
        onClear={[Function]}
        onClick={[Function]}
        placeholder="mm/dd/yyyy"
        placeholderChar="_"
        value=""
      />
    </div>
  }
>
  <Calendar
    onRangeChange={[Function]}
    rangePicker={true}
  />
</Popover>
`;

exports[`RangePicker component 
  view: "date"
 1`] = `
<Calendar
  onRangeChange={[Function]}
  rangePicker={true}
  view="date"
/>
`;

exports[`RangePicker component 
  view: "month"
 1`] = `
<Calendar
  onRangeChange={[Function]}
  rangePicker={true}
  view="month"
/>
`;

exports[`RangePicker component 
  view: "year"
 1`] = `
<Calendar
  onRangeChange={[Function]}
  rangePicker={true}
  view="year"
/>
`;

exports[`RangePicker component 
  withInput: false
 1`] = `
<Calendar
  onRangeChange={[Function]}
  rangePicker={true}
/>
`;

exports[`RangePicker component 
  withInput: true
 1`] = `
<Popover
  appendToBody={true}
  onToggle={[Function]}
  open={false}
  trigger={
    <div
      className="RangePicker-input"
    >
      <ForwardRef
        error={false}
        label="Start Date"
        mask={
          Array [
            /\\\\d/,
            /\\\\d/,
            "/",
            /\\\\d/,
            /\\\\d/,
            "/",
            /\\\\d/,
            /\\\\d/,
            /\\\\d/,
            /\\\\d/,
          ]
        }
        name="rangePicker-start"
        onBlur={[Function]}
        onChange={[Function]}
        onClear={[Function]}
        onClick={[Function]}
        placeholder="mm/dd/yyyy"
        placeholderChar="_"
        value=""
      />
      <div
        className="RangePicker-rangeSeparator"
      >
        <Text>
           - 
        </Text>
      </div>
      <ForwardRef
        error={false}
        label="End Date"
        mask={
          Array [
            /\\\\d/,
            /\\\\d/,
            "/",
            /\\\\d/,
            /\\\\d/,
            "/",
            /\\\\d/,
            /\\\\d/,
            /\\\\d/,
            /\\\\d/,
          ]
        }
        name="rangePicker-end"
        onBlur={[Function]}
        onChange={[Function]}
        onClear={[Function]}
        onClick={[Function]}
        placeholder="mm/dd/yyyy"
        placeholderChar="_"
        value=""
      />
    </div>
  }
>
  <Calendar
    onRangeChange={[Function]}
    rangePicker={true}
  />
</Popover>
`;
